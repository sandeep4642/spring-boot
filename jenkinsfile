@Library('jenkins-shared-library')_

pipeline {
    agent any

    environment {
      registryCreds = "ACR"
      registry = 'kubernetesdemononprod.azurecr.io'
      dockerfile = 'Dockerfile'
      registryRepo = '/kubernetesdemononprod/spring-boot'
      imageURI = "${registry}${registryRepo}:${env.BUILD_NUMBER}"
      RemoveImageOPublish = true
    }

stages {

  stage('Sonarqube Analysis') {
  when { allOf { environment name: 'app_type', value: 'java'} }  
      steps {
          script {
               build.mavensonarbuild()

        }
    }
    
  }


  stage('Build') {
  when { allOf { environment name: 'app_type', value: 'java'} }  
      steps {
          script {
               build.mavenbuild()

        }
    }
    
  }

  stage('Docker Build') {
  when { allOf { environment name: 'app_type', value: 'java'} }  
      steps {
          script {
              dockerImage = build.buildDockerTaggedImage(registry, registryRepo, dockerfile)

        }
    }
    
  }

  stage('Docker Build Push') {
  when { allOf { environment name: 'app_type', value: 'java'} }  
      steps {
          script {
               build.publishDockerImage(registry, registryCreds, dockerImage, imageURI, removeAfterPublish = RemoveImageOPublish)

        }
    }
    
  }


}
} 
